"""
Commande Django pour construire l'index RAG.
"""

from django.core.management.base import BaseCommand, CommandError
from ml.rag import RAGAssistant, RAGDocument
from ml.manifest import ml_manifest
import os
import json


class Command(BaseCommand):
    help = 'Construit l\'index RAG pour l\'assistant'

    def add_arguments(self, parser):
        parser.add_argument(
            '--force',
            action='store_true',
            help='Force la reconstruction m√™me si l\'index existe',
        )
        parser.add_argument(
            '--data-dir',
            type=str,
            default='data/rag',
            help='R√©pertoire contenant les documents RAG',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('ü§ñ D√©but de la construction de l\'index RAG...')
        )
        
        try:
            # Cr√©er l'assistant RAG
            rag_assistant = RAGAssistant()
            
            # Charger les documents depuis le r√©pertoire
            data_dir = options['data_dir']
            if not os.path.exists(data_dir):
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è R√©pertoire {data_dir} non trouv√©. Cr√©ation des documents de d√©monstration...')
                )
                self._create_demo_documents(rag_assistant)
            else:
                self._load_documents_from_dir(rag_assistant, data_dir)
            
            # Enregistrer dans le manifest
            self.stdout.write('üìã Mise √† jour du manifest...')
            ml_manifest.register_index(
                name='rag_index',
                index_type='faiss_rag',
                file_path=str(rag_assistant.rag_index.rag_index_path),
                document_count=len(rag_assistant.rag_index.documents),
                metadata={
                    'chunk_size': 500,
                    'chunk_overlap': 50,
                    'embedding_model': 'sentence-transformers/all-MiniLM-L6-v2',
                }
            )
            
            self.stdout.write(
                self.style.SUCCESS('‚úÖ Index RAG construit avec succ√®s')
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Erreur lors de la construction: {e}')
            )
            raise CommandError(f'√âchec de la construction de l\'index RAG: {e}')
    
    def _create_demo_documents(self, rag_assistant):
        """Cr√©e des documents de d√©monstration pour le RAG."""
        
        demo_documents = [
            RAGDocument(
                content="""
                Politique de retour SmartMarket
                
                Vous avez 30 jours pour retourner un produit non alimentaire en parfait √©tat.
                Les produits alimentaires ne peuvent pas √™tre retourn√©s pour des raisons d'hygi√®ne.
                
                Pour effectuer un retour :
                1. Connectez-vous √† votre compte
                2. Allez dans "Mes commandes"
                3. S√©lectionnez la commande concern√©e
                4. Cliquez sur "Demander un retour"
                
                Les frais de retour sont √† votre charge, sauf en cas de d√©faut du produit.
                Le remboursement sera effectu√© sous 5-7 jours ouvr√©s apr√®s r√©ception du retour.
                """,
                metadata={
                    'type': 'policy',
                    'category': 'returns',
                    'title': 'Politique de retour',
                    'version': '1.0',
                }
            ),
            
            RAGDocument(
                content="""
                Livraison et exp√©dition SmartMarket
                
                Nous livrons partout en France m√©tropolitaine.
                D√©lais de livraison :
                - Standard : 3-5 jours ouvr√©s
                - Express : 1-2 jours ouvr√©s
                - Point relais : 2-4 jours ouvr√©s
                
                Frais de livraison :
                - Gratuit √† partir de 50‚Ç¨ d'achat
                - Standard : 4.90‚Ç¨
                - Express : 9.90‚Ç¨
                - Point relais : 2.90‚Ç¨
                
                Vous recevrez un email de confirmation avec le num√©ro de suivi.
                """,
                metadata={
                    'type': 'policy',
                    'category': 'shipping',
                    'title': 'Livraison et exp√©dition',
                    'version': '1.0',
                }
            ),
            
            RAGDocument(
                content="""
                Guide d'achat - √âlectronique
                
                Avant d'acheter un produit √©lectronique, v√©rifiez :
                - La compatibilit√© avec vos appareils existants
                - Les sp√©cifications techniques
                - La garantie constructeur
                - Les avis clients
                
                Nos produits √©lectroniques sont garantis 2 ans minimum.
                En cas de probl√®me, contactez notre service client.
                
                Conseils d'utilisation :
                - Lisez toujours le manuel d'utilisation
                - Respectez les conditions d'utilisation
                - √âvitez les chocs et l'humidit√©
                """,
                metadata={
                    'type': 'guide',
                    'category': 'electronics',
                    'title': 'Guide d\'achat √©lectronique',
                    'version': '1.0',
                }
            ),
            
            RAGDocument(
                content="""
                Guide d'achat - Mode et v√™tements
                
                Pour bien choisir vos v√™tements :
                - Consultez notre guide des tailles
                - V√©rifiez la composition des mati√®res
                - Lisez les conseils d'entretien
                
                Tailles disponibles :
                - Homme : XS √† XXL
                - Femme : 34 √† 48
                - Enfant : 2 ans √† 16 ans
                
                Retour gratuit sous 30 jours pour les v√™tements.
                Essayez vos v√™tements avant de retirer les √©tiquettes.
                """,
                metadata={
                    'type': 'guide',
                    'category': 'fashion',
                    'title': 'Guide d\'achat mode',
                    'version': '1.0',
                }
            ),
            
            RAGDocument(
                content="""
                FAQ SmartMarket
                
                Q: Comment cr√©er un compte ?
                R: Cliquez sur "S'inscrire" en haut √† droite, remplissez le formulaire.
                
                Q: Comment modifier ma commande ?
                R: Vous pouvez modifier votre commande tant qu'elle n'est pas exp√©di√©e.
                
                Q: Comment contacter le service client ?
                R: Par email √† contact@smartmarket.fr ou par t√©l√©phone au 01 23 45 67 89.
                
                Q: Puis-je annuler ma commande ?
                R: Oui, dans les 2 heures suivant la commande.
                
                Q: Quels moyens de paiement acceptez-vous ?
                R: Carte bancaire, PayPal, virement bancaire, ch√®que.
                """,
                metadata={
                    'type': 'faq',
                    'category': 'general',
                    'title': 'FAQ g√©n√©rale',
                    'version': '1.0',
                }
            ),
        ]
        
        self.stdout.write(f'üìÑ Ajout de {len(demo_documents)} documents de d√©monstration...')
        rag_assistant.add_knowledge_base(demo_documents)
    
    def _load_documents_from_dir(self, rag_assistant, data_dir):
        """Charge les documents depuis un r√©pertoire."""
        
        documents = []
        
        for filename in os.listdir(data_dir):
            if filename.endswith('.json'):
                filepath = os.path.join(data_dir, filename)
                
                try:
                    with open(filepath, 'r', encoding='utf-8') as f:
                        data = json.load(f)
                    
                    if isinstance(data, list):
                        for item in data:
                            doc = RAGDocument(
                                content=item.get('content', ''),
                                metadata=item.get('metadata', {})
                            )
                            documents.append(doc)
                    else:
                        doc = RAGDocument(
                            content=data.get('content', ''),
                            metadata=data.get('metadata', {})
                        )
                        documents.append(doc)
                        
                except Exception as e:
                    self.stdout.write(
                        self.style.WARNING(f'‚ö†Ô∏è Erreur lors du chargement de {filename}: {e}')
                    )
        
        if documents:
            self.stdout.write(f'üìÑ Ajout de {len(documents)} documents...')
            rag_assistant.add_knowledge_base(documents)
        else:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è Aucun document trouv√©. Cr√©ation des documents de d√©monstration...')
            )
            self._create_demo_documents(rag_assistant)

